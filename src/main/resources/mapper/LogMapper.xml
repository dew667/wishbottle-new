<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hust13.wishbottle.mapper.LogMapper" >
  <resultMap id="BaseResultMap" type="com.hust13.wishbottle.entity.Log" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="writer_id" property="writerId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="emotion" property="emotion" jdbcType="INTEGER"/>
    <result column="weather" property="weather" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, writer_id, content, time, status, title, weather, emotion
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hust13.wishbottle.entity.Log" >
    insert into log (id, writer_id, content,
      pic, time, status, 
      title)
    values (#{id,jdbcType=INTEGER}, #{writerId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hust13.wishbottle.entity.Log" useGeneratedKeys="true" keyProperty="id">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="writerId != null" >
        writer_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="weather != null" >
        weather,
      </if>
      <if test="emotion != null" >
        emotion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="writerId != null" >
        #{writerId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="weather != null" >
        #{weather,jdbcType=VARCHAR},
      </if>
      <if test="emotion != null" >
        #{emotion,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hust13.wishbottle.entity.Log" >
    update log
    <set >
      <if test="writerId != null" >
        writer_id = #{writerId,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="weather != null" >
        weather = #{weather,jdbcType=VARCHAR},
      </if>
      <if test="emotion != null" >
        emotion = #{emotion,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hust13.wishbottle.entity.Log" >
    update log
    set writer_id = #{writerId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--获取本人所有日记-->
  <select id="getMyLogs" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select *
    from log
    where writer_id = #{writerId,jdbcType=INTEGER}
  </select>

  <!--根据作者id和关键词搜索-->
  <select id="searchInLog" parameterType="HashMap" resultMap="BaseResultMap" >
    select *
    from log
    where writer_id=#{writerId} and (title like '%${keywords}%' or content like '%${keywords}%')
  </select>
</mapper>